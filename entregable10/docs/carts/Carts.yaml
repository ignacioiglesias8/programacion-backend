paths:
  /api/carts:
    post:
      summary: Crea un nuevo carrito
      tags:
        - Carts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/createCart'
      responses:
        "200":
          description: El carrito fue creado satisfactoriamente
          content: 
            application/json:
              schema:
                $ref: '#components/schemas/Cart'
        "500":
          description: Error interno del servidor
  /api/carts/{cid}:
    get:
      summary: Obtiene el carrito según su Id
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Id del carrito
          schema:
            $type: String
      responses:
        "200":
          description: El carrito fue obtenido satisfactoriamente
          content: 
            application/json:
              schema:
                $ref: '#components/schemas/CartInUse'
        "500":
          description: Error interno del servidor
    put:
      summary: Modifica todo el carrito según su Id
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Id del carrito
          schema:
            $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/updateCart'
      responses:
        "200":
          description: El carrito fue modificado satisfactoriamente
          content: 
            application/json:
              schema:
                $ref: '#components/schemas/CartInUse'
        "500":
          description: Error interno del servidor
    delete:
      summary: Vacía todo el carrito según su Id
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Id del carrito
          schema:
            $type: String
      responses:
        "200":
          description: El carrito fue vaciado satisfactoriamente
          content: 
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: string
                    example: success
                  message:
                    type: string
                    example: Carrito vaciado correctamente
        "500":
          description: Error interno del servidor
  /api/carts/{cid}/product/{pid}:
    post:
    put:
    delete:
  /api/carts/{cid}/purchase:
    get:
components:
  schemas:
    Cart:
      type: object
      properties:
        cart:
          type: array
          items:
            type: object
            properties:
              _id:
                type: ObjectId
                description: Id del carrito generado por MongoDB
              products:
                type: array
      example:
        cart:
          - _id: "6566045645c681af7493e34d"
            products: []
    CartInUse:
      type: object
      properties:
        cart:
          type: array
          items:
            type: object
            properties:
              _id:
                type: ObjectId
                description: Id del carrito generado por MongoDB
              products:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      description: Id del producto en el carrito
                    quantity:
                      type: number
                      description: Cantidad del producto en el carrito
      example:
        cart:
          - _id: "6566045645c681af7493e34d"
            products:
              - product:
                  _id: "654e8d9cdd7bc5ac119b66c0"
                quantity: 1
              - product:
                  _id: "654e8de0dd7bc5ac119b66c2"
                quantity: 2
  requestBodies:
    createCart:
      type: object
      properties:
        cart:
          type: array
          items:
            type: object
            properties:
              products:
                type: array
      example:
        cart:
          - _id: "6566045645c681af7493e34d"
            products:
              []
    updateCart:
      type: object
      properties:
        cart:
          type: array
          items:
            type: object
            properties:
              _id:
                type: ObjectId
                description: Id del carrito generado por MongoDB
              products:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      description: Id del producto en el carrito
                    quantity:
                      type: number
                      description: Cantidad del producto en el carrito
      example:
        products:
          - _id: "654e8d9cdd7bc5ac119b66c0"
            quantity: 3
          - _id: "654e8de0dd7bc5ac119b66c2"
            quantity: 1